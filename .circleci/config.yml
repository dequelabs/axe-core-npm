version: 2.1

orbs:
  browser-tools: circleci/browser-tools@1.2.4

defaults: &defaults
  docker:
    - image: cimg/node:16.16.0-browsers
  working_directory: ~/axe-core-npm

commands:
  configure_npm:
    description: 'Configure the npm client'
    steps:
      - run: npm config set "//registry.npmjs.org/:_authToken" $NPM_AUTH_PUBLIC

  restore_dependency_cache:
    description: 'Restore the dependency cache'
    steps:
      - restore_cache:
          keys:
            - v3-npm-cache-{{ .Environment.CIRCLE_SHA1 }}

jobs:
  dependencies:
    <<: *defaults
    steps:
      - checkout
      - configure_npm
      - restore_cache:
          keys:
            - v2-root-npm-{{ checksum "package-lock.json" }}
      - restore_cache:
          keys:
            - v2-cli-npm-{{ checksum "packages/cli/package-lock.json" }}
      - restore_cache:
          keys:
            - v2-playwright-npm-{{ checksum "packages/playwright/package-lock.json" }}
      - restore_cache:
          keys:
            - v2-puppeteer-npm-{{ checksum "packages/puppeteer/package-lock.json" }}
      - restore_cache:
          keys:
            - v2-webdriverjs-npm-{{ checksum "packages/webdriverjs/package-lock.json" }}
      - restore_cache:
          keys:
            - v2-webdriverio-npm-{{ checksum "packages/webdriverio/package-lock.json" }}
      - restore_cache:
          keys:
            - v2-reporter-earl-npm-{{ checksum "packages/reporter-earl/package-lock.json" }}
      - restore_cache:
          keys:
            - v2-react-npm-{{ checksum "packages/react/package-lock.json" }}
      - restore_cache:
          keys:
            - v2-axe-core-test-npm-{{ checksum "axe_core_test/package-lock.json" }}
      # Install and cache each package's dependencies.
      - run:
          name: Install top-level dependencies
          command: npm ci
      - save_cache:
          key: v2-root-npm-{{ checksum "package-lock.json" }}
          paths:
            - node_modules
      - run: npm run bootstrap -- --ci
      - save_cache:
          key: v2-cli-npm-{{ checksum "packages/cli/package-lock.json" }}
          paths:
            - packages/cli/node_modules
      - save_cache:
          key: v2-playwright-npm-{{ checksum "packages/playwright/package-lock.json" }}
          paths:
            - packages/playwright/node_modules
      - save_cache:
          key: v2-puppeteer-npm-{{ checksum "packages/puppeteer/package-lock.json" }}
          paths:
            - packages/puppeteer/node_modules
      - save_cache:
          key: v2-webdriverjs-npm-{{ checksum "packages/webdriverjs/package-lock.json" }}
          paths:
            - packages/webdriverjs/node_modules
      - save_cache:
          key: v2-webdriverio-npm-{{ checksum "packages/webdriverio/package-lock.json" }}
          paths:
            - packages/webdriverio/node_modules
      - save_cache:
          key: v2-reporter-earl-npm-{{ checksum "packages/reporter-earl/package-lock.json" }}
          paths:
            - packages/reporter-earl/node_modules
      - save_cache:
          key: v2-react-npm-{{ checksum "packages/react/package-lock.json" }}
          paths:
            - packages/react/node_modules
      - save_cache:
          key: v2-axe-core-test-npm-{{ checksum "axe_core_test/package-lock.json" }}
          paths:
            - axe_core_test/node_modules
      - save_cache:
          key: v3-npm-cache-{{ .Environment.CIRCLE_SHA1 }}
          paths:
            - node_modules
            - packages/cli/node_modules
            - packages/playwright/node_modules
            - packages/puppeteer/node_modules
            - packages/webdriverjs/node_modules
            - packages/webdriverio/node_modules
            - packages/reporter-earl/node_modules
            - packages/react/node_modules
            - packages/react/examples/next.js/node_modules
            - packages/react/examples/shadow-dom/node_modules
            - axe_core_test/node_modules

  lint:
    <<: *defaults
    steps:
      - checkout
      - restore_dependency_cache
      - run: npm run lint

  cli:
    <<: *defaults
    steps:
      - checkout
      - restore_dependency_cache
      # Re-build packages, ensuring packages/webdriverjs/dist exists.
      - run: npx lerna run prepare
      # required for browser-driver-manager
      - run: sudo apt-get update -y
      - run: cd packages/cli && npx browser-driver-manager@1.0.4 install chrome chromedriver --verbose
      # lerna link after installing the latest version of chromedriver, as we depend on webdriverJS
      - run: cd packages/cli && npx lerna link
      - run: npm run coverage --prefix=packages/cli
      - run: npm run test:esm --prefix=packages/cli

  puppeteer:
    <<: *defaults
    environment:
      PUPPETEER_SKIP_CHROMIUM_DOWNLOAD: true
    steps:
      - checkout
      - restore_dependency_cache
      - run: npm run build --prefix=packages/puppeteer
        # required for browser-driver-manager
      - run: sudo apt-get update -y
      - run: cd packages/puppeteer && npx browser-driver-manager@1.0.4 install chrome chromedriver --verbose
      - run: npm run coverage --prefix=packages/puppeteer
      - run: npm run test:esm --prefix=packages/puppeteer

  webdriverjs:
    <<: *defaults
    steps:
      - checkout
      - restore_dependency_cache
      - browser-tools/install-chrome
      - browser-tools/install-chromedriver
      - run: npm --prefix=packages/webdriverjs run build
      - run:
          command: npm run coverage --prefix=packages/webdriverjs
          environment:
            CHROMEDRIVER_PATH: /usr/local/bin/chromedriver
      - run:
          command: npm run test:esm --prefix=packages/webdriverjs
          environment:
            CHROMEDRIVER_PATH: /usr/local/bin/chromedriver

  webdriverio:
    <<: *defaults
    working_directory: ~/axe-core-npm
    steps:
      - checkout
      - restore_dependency_cache
      - browser-tools/install-chrome
      - browser-tools/install-chromedriver
      - run:
          command: npm run coverage --prefix=packages/webdriverio
          environment:
            CHROMEDRIVER_PATH: /usr/local/bin/chromedriver
      - run:
          command: npm run test:esm --prefix=packages/webdriverio
          environment:
            CHROMEDRIVER_PATH: /usr/local/bin/chromedriver

  reporter-earl:
    <<: *defaults
    steps:
      - checkout
      - restore_dependency_cache
      - run: npm run test --prefix=packages/reporter-earl
      - run: npm run test:esm --prefix=packages/reporter-earl

  react:
    <<: *defaults
    steps:
      - checkout
      - restore_dependency_cache
      - run: npm run build --prefix=packages/react
      - run: npm run test --prefix=packages/react
      - run: npm run test:esm --prefix=packages/react

  playwright:
    docker:
      - image: mcr.microsoft.com/playwright:v1.29.0
    environment:
      NODE_ENV: development
    working_directory: ~/axe-core-npm
    steps:
      # We need to pin node@14 to run WDIO due to WDIO sync, only works on node@14
      - run: npm install -g node@14 --force
      - checkout
      - restore_dependency_cache
      - run: npm install
      - run: npm run bootstrap -- --ci
      - run: npm run build --prefix=packages/playwright
      - run: npm run coverage --prefix=packages/playwright
      - run: npm run test:esm --prefix=packages/playwright

  axe-core-test:
    <<: *defaults
    steps:
      - checkout
      - restore_dependency_cache
      - run: npm run test --prefix=axe_core_test

  canary_release:
    <<: *defaults
    steps:
      - checkout
      - configure_npm
      - restore_dependency_cache
      # Make sure the working tree is clean
      - run: git reset --hard HEAD
      - run: >-
          npx lerna publish prepatch \
            --no-verify-access \
            --no-git-tag-version \
            --no-push \
            --canary \
            --dist-tag=next \
            --exact \
            --force-publish \
            --yes

  production_release:
    <<: *defaults
    steps:
      - checkout
      - configure_npm
      - restore_dependency_cache
      # Make sure the working tree is clean
      - run: git reset --hard HEAD
      - run: >-
          npx lerna publish from-package \
            --force-publish='*' \
            --yes

  # Create a GitHub release.
  github_release:
    docker:
      - image: cimg/go:1.17.1
    steps:
      - checkout
      - run: go get gopkg.in/aktau/github-release.v0
      - run:
          name: Download and run GitHub release script
          command: |
            curl https://raw.githubusercontent.com/dequelabs/attest-release-scripts/develop/src/node-github-release.sh -s -o ./node-github-release.sh
            chmod +x ./node-github-release.sh
            ./node-github-release.sh

workflows:
  version: 2
  build_and_test:
    jobs:
      - dependencies
      - lint:
          requires:
            - dependencies
      - cli:
          requires:
            - lint
      - playwright:
          requires:
            - lint
      - puppeteer:
          requires:
            - lint
      - webdriverjs:
          requires:
            - lint
      - webdriverio:
          requires:
            - lint
      - reporter-earl:
          requires:
            - lint
      - react:
          requires:
            - lint
      - axe-core-test:
          requires:
            - lint
          filters:
            branches:
              only:
                - /^release*/
                - master
      - canary_release:
          context: html-tools
          requires:
            - dependencies
            - lint
            - cli
            - puppeteer
            - webdriverjs
            - webdriverio
            - reporter-earl
            - react
          filters:
            branches:
              only:
                - develop
      - production_release:
          context: html-tools
          requires:
            - dependencies
            - lint
            - cli
            - puppeteer
            - webdriverjs
            - webdriverio
            - reporter-earl
            - react
          filters:
            branches:
              only: master
      - github_release:
          requires:
            - production_release
