name: Tests

on: [push]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/cache@v3
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}
      - uses: actions/setup-node@v3
        with:
          node-version: 18
      - run: npm ci
      - run: npm run bootstrap -- --ci
      - run: npm run lint

  puppeteer:
    strategy:
      matrix:
        node: [16, 18, 20]
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node}}
      - uses: actions/cache@v3
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}
      - run: npm run build --prefix=packages/puppeteer
      # HACK: Force a TTY to enable browser-driver-manager to manipulate stdout.
      - shell: 'script -q -e -c "bash {0}"'
        run: npx browser-driver-manager install chrome chromedriver --verbose
      - run: npm run coverage --prefix=packages/puppeteer
      - run: npm run test:esm --prefix=packages/puppeteer

  cli:
    strategy:
      matrix:
        node: [16, 18, 20]
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}
      - uses: actions/cache@v3
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}
      # HACK: Force a TTY to enable browser-driver-manager to manipulate stdout.
      - shell: 'script -q -e -c "bash {0}"'
        run: npx browser-driver-manager install chrome chromedriver --verbose
      # Re-build packages, ensuring packages/webdriverjs/dist exists.
      - run: npx lerna run prepare
      # lerna link after installing the latest version of chromedriver, as we depend on webdriverJS
      - run: npx lerna link
        working-directory: packages/cli
      - run: npm run coverage --prefix=packages/cli

  webdriverjs:
    strategy:
      matrix:
        node: [16, 18, 20]
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}
      - uses: actions/cache@v3
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}
      # HACK: Force a TTY to enable browser-driver-manager to manipulate stdout.
      - shell: 'script -q -e -c "bash {0}"'
        run: npx browser-driver-manager install chrome chromedriver --verbose
      - run: npm run build --prefix=packages/webdriverjs
      - run: npm run coverage --prefix=packages/webdriverjs
      - run: npm run test:esm --prefix=packages/webdriverjs

  webdriverio:
    strategy:
      matrix:
        node: [16, 18, 20]
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}
      - uses: actions/cache@v3
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}
      # HACK: Force a TTY to enable browser-driver-manager to manipulate stdout.
      - shell: 'script -q -e -c "bash {0}"'
        run: npx browser-driver-manager install chrome chromedriver --verbose
      - run: npm run build --prefix=packages/webdriverio
      - run: npm run coverage --prefix=packages/webdriverio
      - run: npm run test:esm --prefix=packages/webdriverio

  reporter_earl:
    strategy:
      matrix:
        node: [16, 18, 20]
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}
      - uses: actions/cache@v3
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}
      - run: npm run build --prefix=packages/reporter-earl
      - run: npm run test --prefix=packages/reporter-earl
      - run: npm run test:esm --prefix=packages/reporter-earl

  react:
    strategy:
      matrix:
        node: [16, 18, 20]
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}
      - uses: actions/cache@v3
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}
      - run: npm run build --prefix=packages/react
      - run: npm run test --prefix=packages/react
      - run: npm run test:esm --prefix=packages/react

  playwright:
    strategy:
      matrix:
        node: [16, 18, 20]
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}
      - uses: actions/cache@v3
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}
      - run: npx playwright install --with-deps
      - run: npm ci
      - run: npm run bootstrap -- --ci
      - run: npm run build --prefix=packages/playwright
      - run: npm run coverage --prefix=packages/playwright
      - run: npm run test:esm --prefix=packages/playwright

  # TODO: only run on master and release* branches.
  axe_core_test:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 18
      - uses: actions/cache@v3
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}
      - run: npm test --prefix=axe_core_test
