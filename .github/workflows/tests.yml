name: Tests

on: [push]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/cache@v3
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}
      - uses: actions/setup-node@v3
        with:
          node-version: 16
      - run: npm ci
      - run: npm run bootstrap -- --ci
      - run: npm run lint

  puppeteer:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 16
      - uses: actions/cache@v3
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}
      - run: npm ci
      - run: npm run bootstrap -- --ci
      - run: npm run build --prefix=packages/puppeteer
      - run: npx browser-driver-manager@1.0.4 install chrome chromedriver --verbose
        working-directory: packages/puppeteer
      - run: npm run coverage --prefix=packages/puppeteer
      - run: npm run test:esm --prefix=packages/puppeteer

  cli:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 16
      - uses: actions/cache@v3
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}
      - run: npm ci
      - run: npm run bootstrap -- --ci
      # Re-build packages, ensuring packages/webdriverjs/dist exists.
      - run: npx lerna run prepare
      - run: npx browser-driver-manager@1.0.4 install chrome chromedriver --verbose
        working-directory: packages/cli
      # lerna link after installing the latest version of chromedriver, as we depend on webdriverJS
      - run: npx lerna link
        working-directory: packages/cli
      - run: npm run coverage --prefix=packages/cli
